version: '3.7'

services:

  proxy:
    build: proxy
    container_name: proxy
    depends_on:
      - hub
    ports:
      - '80:80'
      - '443:443'
    restart: unless-stopped

  hub:
    build: hub
    image: hub
    container_name: hub
    environment:
      DOCKER_JUPYTER_CONTAINER: lab
      DOCKER_NETWORK_NAME: covid-2-internal
      HUB_IP: jupyter_hub
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      ADMIN_USERS: ${ADMIN_USERS}
      DATA_LOCATION: ${DATA_LOCATION}
      REQUESTS_CA_BUNDLE: ${REQUESTS_CA_BUNDLE}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      default:
      covid-2-internal:
        aliases:
          - jupyter_hub
    restart: unless-stopped

  lab:
    build: lab
    image: lab
    container_name: lab-throaway
    command: echo
    networks:
      - covid-2-internal

  mariadb:
    build: db
    container_name: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql

  openldap:
    build: ldap
    image: kclhi/openldap:latest
    command: --loglevel debug
    container_name: openldap
    environment:
      LDAP_TLS_CRT_FILENAME: ${LDAP_TLS_CRT_FILENAME}
      LDAP_TLS_KEY_FILENAME: ${LDAP_TLS_KEY_FILENAME}
      LDAP_TLS_CA_CRT_FILENAME: ${LDAP_TLS_CA_CRT_FILENAME}
      LDAP_ORGANISATION: ${LDAP_ORGANISATION}
      LDAP_DOMAIN: ${LDAP_DOMAIN}
      LDAP_BASE_DN: ${LDAP_BASE_DN}
      LDAP_ADMIN_PASSWORD: ${LDAP_ADMIN_PASSWORD}
      LDAP_TLS_CIPHER_SUITE: ${LDAP_TLS_CIPHER_SUITE}
      LDAP_TLS_VERIFY_CLIENT: ${LDAP_TLS_VERIFY_CLIENT}
    volumes:
      - ldap_data:/var/lib/ldap
      - ldap_data:/etc/ldap/slapd.d
    restart: unless-stopped

  phpldapadmin:
    build: phpldapadmin
    depends_on:
      - openldap
    container_name: phpldapadmin
    environment:
      PHPLDAPADMIN_HTTPS: "true"
      PHPLDAPADMIN_SERVER_PATH: ${PHPLDAPADMIN_SERVER_PATH}
      PHPLDAPADMIN_LDAP_HOSTS: ${PHPLDAPADMIN_LDAP_HOSTS}
      PHPLDAPADMIN_HTTPS_CRT_FILENAME: ${PHPLDAPADMIN_HTTPS_CRT_FILENAME}
      PHPLDAPADMIN_HTTPS_KEY_FILENAME: ${PHPLDAPADMIN_HTTPS_KEY_FILENAME}
      PHPLDAPADMIN_HTTPS_CA_CRT_FILENAME: ${PHPLDAPADMIN_HTTPS_CA_CRT_FILENAME}
    ports:
      - '8080:443'
    restart: unless-stopped

  # provenance:

  provenance:
    build: provenance
    image: provenance
    container_name: provenance
    environment:
      PORT: 443
      GUNICORN_CMD_ARGS: ${GUNICORN_CMD_ARGS}
      RABBIT_HOST: "rabbit"
    networks:
      default:
      covid-2-internal:
        aliases:
          - provenance
    volumes:
      - provenance_repo_data:/app/api/repo
    restart: unless-stopped

  rabbit:
    image: "rabbitmq:3-management"
    hostname: "rabbit"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    volumes:
      - provenance_rabbit_data:/var/lib/rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    restart: unless-stopped

  template-server:
    image: kclhi/template-server:latest
    depends_on:
      - neo4j
    restart: unless-stopped
    ports:
      - '8081:8080'

  neo4j:
    image: neo4j:3.4
    environment:
      NEO4J_AUTH: ${NEO4J_AUTH}
    ports:
      - '7687:7687'
      - '7474:7474'
    volumes:
      - provenance_neo4j_data:/data
    restart: unless-stopped

volumes:
  hub_data:
  db_data:
  ldap_data:
  provenance_neo4j_data:
  provenance_rabbit_data:
  provenance_repo_data:

networks:
  default:
    name: covid-2
  covid-2-internal:
    name: covid-2-internal
    internal: true
